{"ast":null,"code":"var _jsxFileName = \"/Users/khairrishi/Desktop/transaction-server/frontend/src/components/TransactionsBarChart.js\",\n  _s = $RefreshSig$();\n// src/components/TransactionsBarChart.js\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { BarChart, Bar, XAxis, YAxis, Tooltip, Legend } from 'recharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TransactionsBarChart = ({\n  month\n}) => {\n  _s();\n  const [barChartData, setBarChartData] = useState([]);\n  useEffect(() => {\n    fetchBarChartData();\n  }, [month]);\n  const fetchBarChartData = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/api/barchart', {\n        params: {\n          month\n        }\n      });\n      setBarChartData(response.data);\n    } catch (error) {\n      console.error('Failed to fetch bar chart data', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Price Range Distribution\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BarChart, {\n      width: 600,\n      height: 300,\n      data: barChartData,\n      children: [/*#__PURE__*/_jsxDEV(XAxis, {\n        dataKey: \"range\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Bar, {\n        dataKey: \"count\",\n        fill: \"#8884d8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(TransactionsBarChart, \"973F2gpMZpDTLCgKPKN5aX9uHaA=\");\n_c = TransactionsBarChart;\nexport default TransactionsBarChart;\nvar _c;\n$RefreshReg$(_c, \"TransactionsBarChart\");","map":{"version":3,"names":["React","useState","useEffect","axios","BarChart","Bar","XAxis","YAxis","Tooltip","Legend","jsxDEV","_jsxDEV","TransactionsBarChart","month","_s","barChartData","setBarChartData","fetchBarChartData","response","get","params","data","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","width","height","dataKey","fill","_c","$RefreshReg$"],"sources":["/Users/khairrishi/Desktop/transaction-server/frontend/src/components/TransactionsBarChart.js"],"sourcesContent":["// src/components/TransactionsBarChart.js\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { BarChart, Bar, XAxis, YAxis, Tooltip, Legend } from 'recharts';\n\nconst TransactionsBarChart = ({ month }) => {\n  const [barChartData, setBarChartData] = useState([]);\n\n  useEffect(() => {\n    fetchBarChartData();\n  }, [month]);\n\n  const fetchBarChartData = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/api/barchart', { params: { month } });\n      setBarChartData(response.data);\n    } catch (error) {\n      console.error('Failed to fetch bar chart data', error);\n    }\n  };\n\n  return (\n    <div>\n      <h2>Price Range Distribution</h2>\n      <BarChart width={600} height={300} data={barChartData}>\n        <XAxis dataKey=\"range\" />\n        <YAxis />\n        <Tooltip />\n        <Legend />\n        <Bar dataKey=\"count\" fill=\"#8884d8\" />\n      </BarChart>\n    </div>\n  );\n};\n\nexport default TransactionsBarChart;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,GAAG,EAAEC,KAAK,EAAEC,KAAK,EAAEC,OAAO,EAAEC,MAAM,QAAQ,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExE,MAAMC,oBAAoB,GAAGA,CAAC;EAAEC;AAAM,CAAC,KAAK;EAAAC,EAAA;EAC1C,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAEpDC,SAAS,CAAC,MAAM;IACde,iBAAiB,CAAC,CAAC;EACrB,CAAC,EAAE,CAACJ,KAAK,CAAC,CAAC;EAEX,MAAMI,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IACpC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMf,KAAK,CAACgB,GAAG,CAAC,oCAAoC,EAAE;QAAEC,MAAM,EAAE;UAAEP;QAAM;MAAE,CAAC,CAAC;MAC7FG,eAAe,CAACE,QAAQ,CAACG,IAAI,CAAC;IAChC,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;IACxD;EACF,CAAC;EAED,oBACEX,OAAA;IAAAa,QAAA,gBACEb,OAAA;MAAAa,QAAA,EAAI;IAAwB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjCjB,OAAA,CAACP,QAAQ;MAACyB,KAAK,EAAE,GAAI;MAACC,MAAM,EAAE,GAAI;MAACT,IAAI,EAAEN,YAAa;MAAAS,QAAA,gBACpDb,OAAA,CAACL,KAAK;QAACyB,OAAO,EAAC;MAAO;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACzBjB,OAAA,CAACJ,KAAK;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACTjB,OAAA,CAACH,OAAO;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACXjB,OAAA,CAACF,MAAM;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACVjB,OAAA,CAACN,GAAG;QAAC0B,OAAO,EAAC,OAAO;QAACC,IAAI,EAAC;MAAS;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAEV,CAAC;AAACd,EAAA,CA5BIF,oBAAoB;AAAAqB,EAAA,GAApBrB,oBAAoB;AA8B1B,eAAeA,oBAAoB;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}